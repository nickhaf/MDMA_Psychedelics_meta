---
title: "MDMA/Psychadelics multi-level meta analysis"
author: Nicklas Hafiz
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: html
bibliography:
  - grateful-refs.bib
  - references.bib
---

```{r load packages}
#| warning: false
#| message: false
#| echo: false

library(tidyverse)
library(here)
library(metafor)
library(dmetar)
library(psych)
library(knitr)
library(grateful)
```

## Introduction
The analysis follows the chapter [Fitting Three-Level Meta-Analysis Models in R](https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/multilevel-ma.html#multilevel-R) from the book [Doing Meta-Analysis in R](https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/), @harrer2021doing. 
```{r}
#| echo: false

cite_packages(output = "paragraph", out.dir = ".")
```

```{r load data}
#| echo: false

file_sources <- list.files(
  path = here::here("data"),
  pattern = "*.csv"
)

my_dat <- lapply(paste0(here::here("data"),"/", file_sources), read.csv)
my_dat <- lapply(my_dat, function(x){
  x %>%
    mutate(var_es = se_es^2)
})
names(my_dat) <- file_sources
```

```{r results='asis'}
#| echo: false

summary_tables <- lapply(my_dat, function(x){
  describe(x[, c("N", "es", "se_es")], skew = FALSE)
})
```

## Analysis
Because some studies provide multiple values we use a three-level Meta-Analysis Model. The nested random effect gets assigned to the grouping variable "study". This means we allow the random intercept to vary across different studys. 
Test statistics and confidence intervals for the fixed effects use a t-distribution.  

```{r}
# Fit the model
models <- lapply(my_dat, function(df){
  rma.mv(yi = es,
                  V = var_es, # Squared standard error of the effect size
                  data = df, # data set
                  random = ~1|Study/es.id, #Nesting the effect size within the Studys
                  test = "t", # similar to Knapp-Hartung method, recommended
                  dfs = "contain",
                  method = "REML" # Restricted maximum-likelihood, recommended
                  )
})

## Model with level 3 variance set to zero, so we assume all effect sizes to be independent
models_2 <- lapply(my_dat, function(df){
  rma.mv(yi = es,
                  V = var_es, # Squared standard error of the effect size
                  data = df, # data set
                  random = ~1|Study/es.id, #Nesting the effect size within the Studys
                  test = "t", # similar to Knapp-Hartung method, recommended
                  dfs = "contain",
                  method = "REML", # Restricted maximum-likelihood, recommended
                  sigma2 = c(0, NA)         
         )
})

models_summary <- lapply(models, summary)
models_2_summary <- lapply(models_2, summary)
i2 <- lapply(models, var.comp)
```


### Model comparison
```{r}
#| echo: false

for(i in 1:length(models)){
  print(anova(models[[i]], models_2[[i]]))
}
```
The nested model doesn't perfom better, so the effects within studies are largely homogneous. However, we know the effects are not independent, so we can keep the three-level model. 

## Results
### Attention

#### Descriptives
```{r}
#| echo: false

kable(summary_tables[["20240115_MABerlin_attention.csv"]])
```

#### Model
```{r}
#| echo: false

models_summary[["20240115_MABerlin_attention.csv"]] 
```

#### I^2
```{r}
#| echo: false

i2[["20240115_MABerlin_attention.csv"]] 
```

### Executive
#### Descriptives
```{r}
#| echo: false

kable(summary_tables[["20240115_MABerlin_executive.csv"]])
```

#### Model
```{r}
#| echo: false

models_summary[["20240115_MABerlin_executive.csv"]]
```

#### I^2
```{r}
#| echo: false

i2[["20240115_MABerlin_executive.csv"]]
```

### Memory
#### Descriptives
```{r}
#| echo: false

kable(summary_tables[["20240115_MABerlin_memory.csv"]])
```

#### Model
```{r}
#| echo: false

models_summary[["20240115_MABerlin_memory.csv"]]
```

#### I^2
```{r}
#| echo: false

i2[["20240115_MABerlin_memory.csv"]]
```

### Microdosing

#### Descriptives
```{r}
#| echo: false

kable(summary_tables[["20240115_MABerlin_microdosing.csv"]])
```

#### Model
```{r}
#| echo: false

models_summary[["20240115_MABerlin_microdosing.csv"]]
```

#### I^2
```{r}
#| echo: false

i2[["20240115_MABerlin_microdosing.csv"]]
```


### Interpretation

- `Variance Components`:
    * sigma^2.1 contains the level 3 between-cluster variance.
    * sigma^2.2 shows the variance within clusters (level 2).
- `Model Results`
    * `estimate` is our estimated pooled effect. 
- `$I^2$`: 
    * $I^2$ quantifies the amount of variation not attributable to sampling error. In three level models, it is split into a part attributable to true effect size differences within clusters (level 2) and between cluster variation (level 3). 
We have 2 $I^2$ values per model quantifying the percentage of total variation associated with either level 2 or level 3. 

## References
